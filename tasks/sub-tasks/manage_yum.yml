---
- name: Yum, cleanup existing repos files
  when:
    - repos_cleanup_existing | bool
  block:
    - name: Yum, identify yum.repos.d/* for cleanup
      become: true
      ansible.builtin.find:
        paths: /etc/yum.repos.d
        patterns: "*"
      register: old_repos_files_to_delete

    - name: Yum, cleanup yum.repos.d/*
      become: true
      loop: "{{ old_repos_files_to_delete.files | flatten }}"
      loop_control:
        loop_var: file
        label: "file: {{ file.path }}"
      ansible.builtin.file:
        path: "{{ file.path }}"
        state: absent


- name: Yum, manage repos
  when: >
    (
      repos_list is defined
      and
      repos_list[ansible_distribution | lower][ansible_distribution_version | lower] is iterable
    )
    or
    (
      repos_list_host is defined
      and
      repos_list_host[ansible_distribution | lower][ansible_distribution_version | lower] is iterable
    )
    or
    (
      repos_list_group is defined
      and
      repos_list_group[ansible_distribution | lower][ansible_distribution_version | lower] is iterable
    )
  block:
    - name: Yum, manage repos
      loop: >-
        {{ repos_list[ansible_distribution | lower][ansible_distribution_version | lower] | default([]) +
        repos_list_host[ansible_distribution | lower][ansible_distribution_version | lower] | default([]) +
        repos_list_group[ansible_distribution | lower][ansible_distribution_version | lower] | default([])
        | flatten(levels=1) }}
      loop_control:
        loop_var: repo
        label: "repo: {{ repo.name }}"
      ansible.builtin.include_tasks:
        file: tasks/sub-tasks/action_yum_repository.yml

    - name: Yum, manage keys
      loop: >-
        {{ repos_list[ansible_distribution | lower][ansible_distribution_version | lower] | default([]) +
        repos_list_host[ansible_distribution | lower][ansible_distribution_version | lower] | default([]) +
        repos_list_group[ansible_distribution | lower][ansible_distribution_version | lower] | default([])
        | flatten(levels=1) }}
      loop_control:
        loop_var: repo
        label: "repo: {{ repo.name }}"
      ansible.builtin.include_tasks:
        file: tasks/sub-tasks/action_rpm_key.yml


- name: Yum, manage repos dl pkgs
  when: >
    (
      repos_dl_pkgs_list is defined
      and
      repos_dl_pkgs_list[ansible_distribution | lower][ansible_distribution_version | lower] is iterable
    )
    or
    (
      repos_dl_pkgs_list_host is defined
      and
      repos_dl_pkgs_list_host[ansible_distribution | lower][ansible_distribution_version | lower] is iterable
    )
    or
    (
      repos_dl_pkgs_list_group is defined
      and
      repos_dl_pkgs_list_group[ansible_distribution | lower][ansible_distribution_version | lower] is iterable
    )
  block:
    - name: Yum, remove repos dl pkgs
      become: true
      when: repos_dl_pkgs_list[ansible_distribution | lower][ansible_distribution_version | lower] | default(false)
      loop: >-
        {{ repos_dl_pkgs_list[ansible_distribution | lower][ansible_distribution_version | lower] | default([]) +
        repos_dl_pkgs_list_host[ansible_distribution | lower][ansible_distribution_version | lower] | default([]) +
        repos_dl_pkgs_list_group[ansible_distribution | lower][ansible_distribution_version | lower] | default([])
        | flatten(levels=1) }}
      loop_control:
        loop_var: repo
        label: "repo: {{ repo.name }}"
      ansible.builtin.yum:
        name: "{{ repo.name }}"
        state: absent

    - name: Yum, manage repos dl pkgs
      become: true
      when: repos_dl_pkgs_list[ansible_distribution | lower][ansible_distribution_version | lower] | default(false)
      loop: >-
        {{ repos_dl_pkgs_list[ansible_distribution | lower][ansible_distribution_version | lower] | default([]) +
        repos_dl_pkgs_list_host[ansible_distribution | lower][ansible_distribution_version | lower] | default([]) +
        repos_dl_pkgs_list_group[ansible_distribution | lower][ansible_distribution_version | lower] | default([])
        | flatten(levels=1) }}
      loop_control:
        loop_var: repo
        label: "repo: {{ repo.name }}"
      ansible.builtin.yum:
        name: "{{ repo.url }}"
        state: present
        disablerepo: '*'
        disable_gpg_check: true
